-module(rs8).
-export([decode/1]).

-define(NN, 255).
-define(NROOTS, 32).
-define(FCR, 112).
-define(PRIM, 11).

decode(Data) ->
    ErrorFree = list_to_tuple([0 || _ <- lists:seq(1, ?NROOTS)]),
    case form_syndromes(Data) of
        ErrorFree -> {ok, 0, Data};
        Syndromes ->
            Indices = lists:map(fun index_of/1, tuple_to_list(Syndromes)),
			{error, Indices}
    end.

form_syndromes(Data) ->
    S = list_to_tuple([binary:at(Data, 0) || _ <- lists:seq(1, ?NROOTS)]),
    form_syndromes(Data, S, 1).

form_syndromes(_, S, ?NN) -> S;
form_syndromes(Data, S, J) ->
    form_syndromes(Data, form_syndromes(Data, S, J, 1), J + 1).

form_syndromes(_, S, _, ?NROOTS + 1) -> S;
form_syndromes(Data, S, J, I) ->
    NS = setelement(I, S, syndrome_elem(element(I, S), binary:at(Data, J), I)),
    form_syndromes(Data, NS, J, I + 1).

syndrome_elem(0, Dj, _) -> Dj;
syndrome_elem(Si, Dj, I) -> (Dj bxor alpha_to(modnn(index_of(Si) + (?FCR + (I - 1)) * ?PRIM))) band 255.

modnn(N) when N < 255 -> N;
modnn(N) ->
    X = N - 255,
    modnn((X bsr 8) + (X band 255)).

alpha_to(16#00) -> 16#01;
alpha_to(16#01) -> 16#02;
alpha_to(16#02) -> 16#04;
alpha_to(16#03) -> 16#08;
alpha_to(16#04) -> 16#10;
alpha_to(16#05) -> 16#20;
alpha_to(16#06) -> 16#40;
alpha_to(16#07) -> 16#80;
alpha_to(16#08) -> 16#87;
alpha_to(16#09) -> 16#89;
alpha_to(16#0a) -> 16#95;
alpha_to(16#0b) -> 16#ad;
alpha_to(16#0c) -> 16#dd;
alpha_to(16#0d) -> 16#3d;
alpha_to(16#0e) -> 16#7a;
alpha_to(16#0f) -> 16#f4;
alpha_to(16#10) -> 16#6f;
alpha_to(16#11) -> 16#de;
alpha_to(16#12) -> 16#3b;
alpha_to(16#13) -> 16#76;
alpha_to(16#14) -> 16#ec;
alpha_to(16#15) -> 16#5f;
alpha_to(16#16) -> 16#be;
alpha_to(16#17) -> 16#fb;
alpha_to(16#18) -> 16#71;
alpha_to(16#19) -> 16#e2;
alpha_to(16#1a) -> 16#43;
alpha_to(16#1b) -> 16#86;
alpha_to(16#1c) -> 16#8b;
alpha_to(16#1d) -> 16#91;
alpha_to(16#1e) -> 16#a5;
alpha_to(16#1f) -> 16#cd;
alpha_to(16#20) -> 16#1d;
alpha_to(16#21) -> 16#3a;
alpha_to(16#22) -> 16#74;
alpha_to(16#23) -> 16#e8;
alpha_to(16#24) -> 16#57;
alpha_to(16#25) -> 16#ae;
alpha_to(16#26) -> 16#db;
alpha_to(16#27) -> 16#31;
alpha_to(16#28) -> 16#62;
alpha_to(16#29) -> 16#c4;
alpha_to(16#2a) -> 16#0f;
alpha_to(16#2b) -> 16#1e;
alpha_to(16#2c) -> 16#3c;
alpha_to(16#2d) -> 16#78;
alpha_to(16#2e) -> 16#f0;
alpha_to(16#2f) -> 16#67;
alpha_to(16#30) -> 16#ce;
alpha_to(16#31) -> 16#1b;
alpha_to(16#32) -> 16#36;
alpha_to(16#33) -> 16#6c;
alpha_to(16#34) -> 16#d8;
alpha_to(16#35) -> 16#37;
alpha_to(16#36) -> 16#6e;
alpha_to(16#37) -> 16#dc;
alpha_to(16#38) -> 16#3f;
alpha_to(16#39) -> 16#7e;
alpha_to(16#3a) -> 16#fc;
alpha_to(16#3b) -> 16#7f;
alpha_to(16#3c) -> 16#fe;
alpha_to(16#3d) -> 16#7b;
alpha_to(16#3e) -> 16#f6;
alpha_to(16#3f) -> 16#6b;
alpha_to(16#40) -> 16#d6;
alpha_to(16#41) -> 16#2b;
alpha_to(16#42) -> 16#56;
alpha_to(16#43) -> 16#ac;
alpha_to(16#44) -> 16#df;
alpha_to(16#45) -> 16#39;
alpha_to(16#46) -> 16#72;
alpha_to(16#47) -> 16#e4;
alpha_to(16#48) -> 16#4f;
alpha_to(16#49) -> 16#9e;
alpha_to(16#4a) -> 16#bb;
alpha_to(16#4b) -> 16#f1;
alpha_to(16#4c) -> 16#65;
alpha_to(16#4d) -> 16#ca;
alpha_to(16#4e) -> 16#13;
alpha_to(16#4f) -> 16#26;
alpha_to(16#50) -> 16#4c;
alpha_to(16#51) -> 16#98;
alpha_to(16#52) -> 16#b7;
alpha_to(16#53) -> 16#e9;
alpha_to(16#54) -> 16#55;
alpha_to(16#55) -> 16#aa;
alpha_to(16#56) -> 16#d3;
alpha_to(16#57) -> 16#21;
alpha_to(16#58) -> 16#42;
alpha_to(16#59) -> 16#84;
alpha_to(16#5a) -> 16#8f;
alpha_to(16#5b) -> 16#99;
alpha_to(16#5c) -> 16#b5;
alpha_to(16#5d) -> 16#ed;
alpha_to(16#5e) -> 16#5d;
alpha_to(16#5f) -> 16#ba;
alpha_to(16#60) -> 16#f3;
alpha_to(16#61) -> 16#61;
alpha_to(16#62) -> 16#c2;
alpha_to(16#63) -> 16#03;
alpha_to(16#64) -> 16#06;
alpha_to(16#65) -> 16#0c;
alpha_to(16#66) -> 16#18;
alpha_to(16#67) -> 16#30;
alpha_to(16#68) -> 16#60;
alpha_to(16#69) -> 16#c0;
alpha_to(16#6a) -> 16#07;
alpha_to(16#6b) -> 16#0e;
alpha_to(16#6c) -> 16#1c;
alpha_to(16#6d) -> 16#38;
alpha_to(16#6e) -> 16#70;
alpha_to(16#6f) -> 16#e0;
alpha_to(16#70) -> 16#47;
alpha_to(16#71) -> 16#8e;
alpha_to(16#72) -> 16#9b;
alpha_to(16#73) -> 16#b1;
alpha_to(16#74) -> 16#e5;
alpha_to(16#75) -> 16#4d;
alpha_to(16#76) -> 16#9a;
alpha_to(16#77) -> 16#b3;
alpha_to(16#78) -> 16#e1;
alpha_to(16#79) -> 16#45;
alpha_to(16#7a) -> 16#8a;
alpha_to(16#7b) -> 16#93;
alpha_to(16#7c) -> 16#a1;
alpha_to(16#7d) -> 16#c5;
alpha_to(16#7e) -> 16#0d;
alpha_to(16#7f) -> 16#1a;
alpha_to(16#80) -> 16#34;
alpha_to(16#81) -> 16#68;
alpha_to(16#82) -> 16#d0;
alpha_to(16#83) -> 16#27;
alpha_to(16#84) -> 16#4e;
alpha_to(16#85) -> 16#9c;
alpha_to(16#86) -> 16#bf;
alpha_to(16#87) -> 16#f9;
alpha_to(16#88) -> 16#75;
alpha_to(16#89) -> 16#ea;
alpha_to(16#8a) -> 16#53;
alpha_to(16#8b) -> 16#a6;
alpha_to(16#8c) -> 16#cb;
alpha_to(16#8d) -> 16#11;
alpha_to(16#8e) -> 16#22;
alpha_to(16#8f) -> 16#44;
alpha_to(16#90) -> 16#88;
alpha_to(16#91) -> 16#97;
alpha_to(16#92) -> 16#a9;
alpha_to(16#93) -> 16#d5;
alpha_to(16#94) -> 16#2d;
alpha_to(16#95) -> 16#5a;
alpha_to(16#96) -> 16#b4;
alpha_to(16#97) -> 16#ef;
alpha_to(16#98) -> 16#59;
alpha_to(16#99) -> 16#b2;
alpha_to(16#9a) -> 16#e3;
alpha_to(16#9b) -> 16#41;
alpha_to(16#9c) -> 16#82;
alpha_to(16#9d) -> 16#83;
alpha_to(16#9e) -> 16#81;
alpha_to(16#9f) -> 16#85;
alpha_to(16#a0) -> 16#8d;
alpha_to(16#a1) -> 16#9d;
alpha_to(16#a2) -> 16#bd;
alpha_to(16#a3) -> 16#fd;
alpha_to(16#a4) -> 16#7d;
alpha_to(16#a5) -> 16#fa;
alpha_to(16#a6) -> 16#73;
alpha_to(16#a7) -> 16#e6;
alpha_to(16#a8) -> 16#4b;
alpha_to(16#a9) -> 16#96;
alpha_to(16#aa) -> 16#ab;
alpha_to(16#ab) -> 16#d1;
alpha_to(16#ac) -> 16#25;
alpha_to(16#ad) -> 16#4a;
alpha_to(16#ae) -> 16#94;
alpha_to(16#af) -> 16#af;
alpha_to(16#b0) -> 16#d9;
alpha_to(16#b1) -> 16#35;
alpha_to(16#b2) -> 16#6a;
alpha_to(16#b3) -> 16#d4;
alpha_to(16#b4) -> 16#2f;
alpha_to(16#b5) -> 16#5e;
alpha_to(16#b6) -> 16#bc;
alpha_to(16#b7) -> 16#ff;
alpha_to(16#b8) -> 16#79;
alpha_to(16#b9) -> 16#f2;
alpha_to(16#ba) -> 16#63;
alpha_to(16#bb) -> 16#c6;
alpha_to(16#bc) -> 16#0b;
alpha_to(16#bd) -> 16#16;
alpha_to(16#be) -> 16#2c;
alpha_to(16#bf) -> 16#58;
alpha_to(16#c0) -> 16#b0;
alpha_to(16#c1) -> 16#e7;
alpha_to(16#c2) -> 16#49;
alpha_to(16#c3) -> 16#92;
alpha_to(16#c4) -> 16#a3;
alpha_to(16#c5) -> 16#c1;
alpha_to(16#c6) -> 16#05;
alpha_to(16#c7) -> 16#0a;
alpha_to(16#c8) -> 16#14;
alpha_to(16#c9) -> 16#28;
alpha_to(16#ca) -> 16#50;
alpha_to(16#cb) -> 16#a0;
alpha_to(16#cc) -> 16#c7;
alpha_to(16#cd) -> 16#09;
alpha_to(16#ce) -> 16#12;
alpha_to(16#cf) -> 16#24;
alpha_to(16#d0) -> 16#48;
alpha_to(16#d1) -> 16#90;
alpha_to(16#d2) -> 16#a7;
alpha_to(16#d3) -> 16#c9;
alpha_to(16#d4) -> 16#15;
alpha_to(16#d5) -> 16#2a;
alpha_to(16#d6) -> 16#54;
alpha_to(16#d7) -> 16#a8;
alpha_to(16#d8) -> 16#d7;
alpha_to(16#d9) -> 16#29;
alpha_to(16#da) -> 16#52;
alpha_to(16#db) -> 16#a4;
alpha_to(16#dc) -> 16#cf;
alpha_to(16#dd) -> 16#19;
alpha_to(16#de) -> 16#32;
alpha_to(16#df) -> 16#64;
alpha_to(16#e0) -> 16#c8;
alpha_to(16#e1) -> 16#17;
alpha_to(16#e2) -> 16#2e;
alpha_to(16#e3) -> 16#5c;
alpha_to(16#e4) -> 16#b8;
alpha_to(16#e5) -> 16#f7;
alpha_to(16#e6) -> 16#69;
alpha_to(16#e7) -> 16#d2;
alpha_to(16#e8) -> 16#23;
alpha_to(16#e9) -> 16#46;
alpha_to(16#ea) -> 16#8c;
alpha_to(16#eb) -> 16#9f;
alpha_to(16#ec) -> 16#b9;
alpha_to(16#ed) -> 16#f5;
alpha_to(16#ee) -> 16#6d;
alpha_to(16#ef) -> 16#da;
alpha_to(16#f0) -> 16#33;
alpha_to(16#f1) -> 16#66;
alpha_to(16#f2) -> 16#cc;
alpha_to(16#f3) -> 16#1f;
alpha_to(16#f4) -> 16#3e;
alpha_to(16#f5) -> 16#7c;
alpha_to(16#f6) -> 16#f8;
alpha_to(16#f7) -> 16#77;
alpha_to(16#f8) -> 16#ee;
alpha_to(16#f9) -> 16#5b;
alpha_to(16#fa) -> 16#b6;
alpha_to(16#fb) -> 16#eb;
alpha_to(16#fc) -> 16#51;
alpha_to(16#fd) -> 16#a2;
alpha_to(16#fe) -> 16#c3;
alpha_to(16#ff) -> 16#00.

index_of(16#00) -> 16#ff;
index_of(16#01) -> 16#00;
index_of(16#02) -> 16#01;
index_of(16#03) -> 16#63;
index_of(16#04) -> 16#02;
index_of(16#05) -> 16#c6;
index_of(16#06) -> 16#64;
index_of(16#07) -> 16#6a;
index_of(16#08) -> 16#03;
index_of(16#09) -> 16#cd;
index_of(16#0a) -> 16#c7;
index_of(16#0b) -> 16#bc;
index_of(16#0c) -> 16#65;
index_of(16#0d) -> 16#7e;
index_of(16#0e) -> 16#6b;
index_of(16#0f) -> 16#2a;
index_of(16#10) -> 16#04;
index_of(16#11) -> 16#8d;
index_of(16#12) -> 16#ce;
index_of(16#13) -> 16#4e;
index_of(16#14) -> 16#c8;
index_of(16#15) -> 16#d4;
index_of(16#16) -> 16#bd;
index_of(16#17) -> 16#e1;
index_of(16#18) -> 16#66;
index_of(16#19) -> 16#dd;
index_of(16#1a) -> 16#7f;
index_of(16#1b) -> 16#31;
index_of(16#1c) -> 16#6c;
index_of(16#1d) -> 16#20;
index_of(16#1e) -> 16#2b;
index_of(16#1f) -> 16#f3;
index_of(16#20) -> 16#05;
index_of(16#21) -> 16#57;
index_of(16#22) -> 16#8e;
index_of(16#23) -> 16#e8;
index_of(16#24) -> 16#cf;
index_of(16#25) -> 16#ac;
index_of(16#26) -> 16#4f;
index_of(16#27) -> 16#83;
index_of(16#28) -> 16#c9;
index_of(16#29) -> 16#d9;
index_of(16#2a) -> 16#d5;
index_of(16#2b) -> 16#41;
index_of(16#2c) -> 16#be;
index_of(16#2d) -> 16#94;
index_of(16#2e) -> 16#e2;
index_of(16#2f) -> 16#b4;
index_of(16#30) -> 16#67;
index_of(16#31) -> 16#27;
index_of(16#32) -> 16#de;
index_of(16#33) -> 16#f0;
index_of(16#34) -> 16#80;
index_of(16#35) -> 16#b1;
index_of(16#36) -> 16#32;
index_of(16#37) -> 16#35;
index_of(16#38) -> 16#6d;
index_of(16#39) -> 16#45;
index_of(16#3a) -> 16#21;
index_of(16#3b) -> 16#12;
index_of(16#3c) -> 16#2c;
index_of(16#3d) -> 16#0d;
index_of(16#3e) -> 16#f4;
index_of(16#3f) -> 16#38;
index_of(16#40) -> 16#06;
index_of(16#41) -> 16#9b;
index_of(16#42) -> 16#58;
index_of(16#43) -> 16#1a;
index_of(16#44) -> 16#8f;
index_of(16#45) -> 16#79;
index_of(16#46) -> 16#e9;
index_of(16#47) -> 16#70;
index_of(16#48) -> 16#d0;
index_of(16#49) -> 16#c2;
index_of(16#4a) -> 16#ad;
index_of(16#4b) -> 16#a8;
index_of(16#4c) -> 16#50;
index_of(16#4d) -> 16#75;
index_of(16#4e) -> 16#84;
index_of(16#4f) -> 16#48;
index_of(16#50) -> 16#ca;
index_of(16#51) -> 16#fc;
index_of(16#52) -> 16#da;
index_of(16#53) -> 16#8a;
index_of(16#54) -> 16#d6;
index_of(16#55) -> 16#54;
index_of(16#56) -> 16#42;
index_of(16#57) -> 16#24;
index_of(16#58) -> 16#bf;
index_of(16#59) -> 16#98;
index_of(16#5a) -> 16#95;
index_of(16#5b) -> 16#f9;
index_of(16#5c) -> 16#e3;
index_of(16#5d) -> 16#5e;
index_of(16#5e) -> 16#b5;
index_of(16#5f) -> 16#15;
index_of(16#60) -> 16#68;
index_of(16#61) -> 16#61;
index_of(16#62) -> 16#28;
index_of(16#63) -> 16#ba;
index_of(16#64) -> 16#df;
index_of(16#65) -> 16#4c;
index_of(16#66) -> 16#f1;
index_of(16#67) -> 16#2f;
index_of(16#68) -> 16#81;
index_of(16#69) -> 16#e6;
index_of(16#6a) -> 16#b2;
index_of(16#6b) -> 16#3f;
index_of(16#6c) -> 16#33;
index_of(16#6d) -> 16#ee;
index_of(16#6e) -> 16#36;
index_of(16#6f) -> 16#10;
index_of(16#70) -> 16#6e;
index_of(16#71) -> 16#18;
index_of(16#72) -> 16#46;
index_of(16#73) -> 16#a6;
index_of(16#74) -> 16#22;
index_of(16#75) -> 16#88;
index_of(16#76) -> 16#13;
index_of(16#77) -> 16#f7;
index_of(16#78) -> 16#2d;
index_of(16#79) -> 16#b8;
index_of(16#7a) -> 16#0e;
index_of(16#7b) -> 16#3d;
index_of(16#7c) -> 16#f5;
index_of(16#7d) -> 16#a4;
index_of(16#7e) -> 16#39;
index_of(16#7f) -> 16#3b;
index_of(16#80) -> 16#07;
index_of(16#81) -> 16#9e;
index_of(16#82) -> 16#9c;
index_of(16#83) -> 16#9d;
index_of(16#84) -> 16#59;
index_of(16#85) -> 16#9f;
index_of(16#86) -> 16#1b;
index_of(16#87) -> 16#08;
index_of(16#88) -> 16#90;
index_of(16#89) -> 16#09;
index_of(16#8a) -> 16#7a;
index_of(16#8b) -> 16#1c;
index_of(16#8c) -> 16#ea;
index_of(16#8d) -> 16#a0;
index_of(16#8e) -> 16#71;
index_of(16#8f) -> 16#5a;
index_of(16#90) -> 16#d1;
index_of(16#91) -> 16#1d;
index_of(16#92) -> 16#c3;
index_of(16#93) -> 16#7b;
index_of(16#94) -> 16#ae;
index_of(16#95) -> 16#0a;
index_of(16#96) -> 16#a9;
index_of(16#97) -> 16#91;
index_of(16#98) -> 16#51;
index_of(16#99) -> 16#5b;
index_of(16#9a) -> 16#76;
index_of(16#9b) -> 16#72;
index_of(16#9c) -> 16#85;
index_of(16#9d) -> 16#a1;
index_of(16#9e) -> 16#49;
index_of(16#9f) -> 16#eb;
index_of(16#a0) -> 16#cb;
index_of(16#a1) -> 16#7c;
index_of(16#a2) -> 16#fd;
index_of(16#a3) -> 16#c4;
index_of(16#a4) -> 16#db;
index_of(16#a5) -> 16#1e;
index_of(16#a6) -> 16#8b;
index_of(16#a7) -> 16#d2;
index_of(16#a8) -> 16#d7;
index_of(16#a9) -> 16#92;
index_of(16#aa) -> 16#55;
index_of(16#ab) -> 16#aa;
index_of(16#ac) -> 16#43;
index_of(16#ad) -> 16#0b;
index_of(16#ae) -> 16#25;
index_of(16#af) -> 16#af;
index_of(16#b0) -> 16#c0;
index_of(16#b1) -> 16#73;
index_of(16#b2) -> 16#99;
index_of(16#b3) -> 16#77;
index_of(16#b4) -> 16#96;
index_of(16#b5) -> 16#5c;
index_of(16#b6) -> 16#fa;
index_of(16#b7) -> 16#52;
index_of(16#b8) -> 16#e4;
index_of(16#b9) -> 16#ec;
index_of(16#ba) -> 16#5f;
index_of(16#bb) -> 16#4a;
index_of(16#bc) -> 16#b6;
index_of(16#bd) -> 16#a2;
index_of(16#be) -> 16#16;
index_of(16#bf) -> 16#86;
index_of(16#c0) -> 16#69;
index_of(16#c1) -> 16#c5;
index_of(16#c2) -> 16#62;
index_of(16#c3) -> 16#fe;
index_of(16#c4) -> 16#29;
index_of(16#c5) -> 16#7d;
index_of(16#c6) -> 16#bb;
index_of(16#c7) -> 16#cc;
index_of(16#c8) -> 16#e0;
index_of(16#c9) -> 16#d3;
index_of(16#ca) -> 16#4d;
index_of(16#cb) -> 16#8c;
index_of(16#cc) -> 16#f2;
index_of(16#cd) -> 16#1f;
index_of(16#ce) -> 16#30;
index_of(16#cf) -> 16#dc;
index_of(16#d0) -> 16#82;
index_of(16#d1) -> 16#ab;
index_of(16#d2) -> 16#e7;
index_of(16#d3) -> 16#56;
index_of(16#d4) -> 16#b3;
index_of(16#d5) -> 16#93;
index_of(16#d6) -> 16#40;
index_of(16#d7) -> 16#d8;
index_of(16#d8) -> 16#34;
index_of(16#d9) -> 16#b0;
index_of(16#da) -> 16#ef;
index_of(16#db) -> 16#26;
index_of(16#dc) -> 16#37;
index_of(16#dd) -> 16#0c;
index_of(16#de) -> 16#11;
index_of(16#df) -> 16#44;
index_of(16#e0) -> 16#6f;
index_of(16#e1) -> 16#78;
index_of(16#e2) -> 16#19;
index_of(16#e3) -> 16#9a;
index_of(16#e4) -> 16#47;
index_of(16#e5) -> 16#74;
index_of(16#e6) -> 16#a7;
index_of(16#e7) -> 16#c1;
index_of(16#e8) -> 16#23;
index_of(16#e9) -> 16#53;
index_of(16#ea) -> 16#89;
index_of(16#eb) -> 16#fb;
index_of(16#ec) -> 16#14;
index_of(16#ed) -> 16#5d;
index_of(16#ee) -> 16#f8;
index_of(16#ef) -> 16#97;
index_of(16#f0) -> 16#2e;
index_of(16#f1) -> 16#4b;
index_of(16#f2) -> 16#b9;
index_of(16#f3) -> 16#60;
index_of(16#f4) -> 16#0f;
index_of(16#f5) -> 16#ed;
index_of(16#f6) -> 16#3e;
index_of(16#f7) -> 16#e5;
index_of(16#f8) -> 16#f6;
index_of(16#f9) -> 16#87;
index_of(16#fa) -> 16#a5;
index_of(16#fb) -> 16#17;
index_of(16#fc) -> 16#3a;
index_of(16#fd) -> 16#a3;
index_of(16#fe) -> 16#3c;
index_of(16#ff) -> 16#b7.
